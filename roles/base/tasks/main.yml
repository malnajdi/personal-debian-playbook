---
# tasks file for base
- name: Install essential packages
  apt:
    name: "{{ essential_packages }}"

- name: Install Snaps Packages
  snap:
    name: "{{ item.name }}"
    classic: "{{ item.classic }}"
  loop: "{{ snap_packages }}"

- name: Create default directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ user }}"
    group: "{{ group }}"
  loop: "{{ directories }}"

# Compton
- name: Configure Compton
  template:
    src: compton.conf.j2
    dest: "{{ user_config_path }}/compton/compton.conf"
    owner: "{{ user }}"
    group: "{{ group }}"
  notify: restart compton

# Xmonad
- name: Configure xmonad
  template:
    src: xmonad.hs.j2
    dest: "{{ xmonad_config_path }}/xmonad.hs"
    owner: "{{ user }}"
    group: "{{ group }}"
  notify: restart xmonad

# Suckless Terminal
# TODO package should be downloaded and extracted and built
# File should be exists in this role.
- name: Check if suckless terminal (st) is installed 
  stat:
    path: /usr/local/bin/st
  register: st_installed

- name: Extract suckless terminal (st)
  unarchive:
    src: st-0.8.2.tar.gz
    dest: "{{ user_config_path }}"
    owner: "{{ user }}"
    group: "{{ group }}"
  when: not st_installed.stat.exists

- name: Configure suckless terminal (st)
  template:
    src: st_config.h.j2
    dest: "{{ user_config_path }}/st-0.8.2/config.h"
    owner: "{{ user }}"
    group: "{{ group }}"
  register: st_configured

- name: Build Suckless terminal (st)
  command: make clean install
  args: 
    chdir: "{{ user_config_path }}/st-0.8.2/"
  when: st_configured.changed

# Nitrogen & wallpapers
- name: Copy wallpapers
  synchronize:
    src: wallpapers/
    dest: "{{ user_wallpaper_path }}"

- name: Configure nitrogen & wallpaper
  template:
    src: "{{ item }}.j2"
    dest: "{{ user_config_path }}/nitrogen/{{ item }}"
    owner: "{{ user }}"
    group: "{{ group }}"
  loop: 
    - nitrogen.cfg
    - bg-saved.cfg
  register: nitrogen_status
  notify: restore nitrogen
  
# Lock Screen (i3lock)
- name: Scale lockscreen wallpaper
  command: "convert -scale 1920x1080 {{ user_wallpaper_path }}/{{ default_user_wallpaper_name }}.png {{ user_wallpaper_path }}/lockscreen.png"
  notify: restart xmonad
  when: nitrogen_status.changed

# Polybar
- name: Check if polybar is installed
  stat:
    path: /usr/local/bin/polybar
  register: polybar_status

- name: Install polybar required packages
  apt:
    name: "{{ polybar_packages }}"
  when: not polybar_status.stat.exists

- name: Get polybar repository
  git:
    repo: "{{ polybar_repository }}"
    dest: "{{ user_home_path }}/polybar"
  when: not polybar_status.stat.exists
    
- name: Build polybar
  command: "./build.sh"
  args:
    chdir: "{{ user_home_path }}/polybar"
  when: not polybar_status.stat.exists

# Polybar Theme
- name: Configure polybar theme
  template:
    src: "polybar/{{ item.name }}.j2"
    dest: "{{ user_config_path }}/polybar/{{ item.name }}"
    owner: "{{ user }}"
    group: "{{ group }}"
    mode: "{{ item.mode }}"
  loop:
    - {'name': 'config.ini', 'mode': 640}
    - {'name': 'modules.ini', 'mode': 640}
    - {'name': 'bars.ini', 'mode': 640}
    - {'name': 'colors.ini', 'mode': 640}
    - {'name': 'launch.sh', 'mode': a+x}
  notify:
    - restart xmonad

# Language
- name: Create change language script
  template:
    src: change-lang.sh.j2
    dest: "{{ user_config_path }}/change-lang.sh"
    owner: "{{ user }}"
    group: "{{ group }}"
    mode: a+x
  notify:
    - restart xmonad

# Fonts
- name: Disable 70-no-bitmaps.conf
  file:
    path: "/etc/fonts/conf.d/70-no-bitmaps.conf"
    state: absent
  notify:
    - reconfigure fontconfig
    - restart xmonad

- name: Enable 70-yes-bitmaps.conf
  file:
    src: "/usr/share/fontconfig/conf.avail/70-yes-bitmaps.conf"
    dest: "/etc/fonts/conf.d/70-yes-bitmaps.conf"
    owner: root
    group: root
    state: link
  notify:
    - reconfigure fontconfig
    - restart xmonad